{"version":3,"file":"component---src-pages-using-typescript-tsx.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/pages/using-typescript.tsx","webpack://gatsby-starter-default/./src/components/layout.js","webpack://gatsby-starter-default/./src/components/seo.js"],"sourcesContent":["// If you don't want to use TypeScript you can delete this file!\nimport * as React from \"react\"\nimport { PageProps, Link, graphql, HeadFC } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\ntype DataProps = {\n  site: {\n    buildTime: string\n  }\n}\n\nconst UsingTypescript: React.FC<PageProps<DataProps>> = ({\n  data,\n  location,\n}) => (\n  <Layout>\n    <h1>\n      Gatsby supports <b>TypeScript by default</b>\n    </h1>\n    <p>\n      This means that you can create and write <code>.ts/.tsx</code> files for\n      your pages, components, and <code>gatsby-*</code> configuration files (for\n      example <code>gatsby-config.ts</code>).\n    </p>\n    <p>\n      For type checking you'll want to install <code>typescript</code> via npm\n      and run <code>tsc --init</code> to create a <code>tsconfig</code> file.\n    </p>\n    <p>\n      You're currently on the page <code>{location.pathname}</code> which was\n      built on {data.site.buildTime}.\n    </p>\n    <p>\n      To learn more, head over to our{\" \"}\n      <a href=\"https://www.gatsbyjs.com/docs/how-to/custom-configuration/typescript/\">\n        documentation about TypeScript\n      </a>\n      .\n    </p>\n    <Link to=\"/\">Go back to the homepage</Link>\n  </Layout>\n)\n\nexport const Head: HeadFC<DataProps> = () => <Seo title=\"Using TypeScript\" />\n\nexport default UsingTypescript\n\nexport const query = graphql`\n  {\n    site {\n      buildTime(formatString: \"YYYY-MM-DD hh:mm a z\")\n    }\n  }\n`\n","import React from \"react\"\nimport { createGlobalStyle, ThemeProvider } from \"styled-components\"\nimport { Helmet } from \"react-helmet\"\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    margin: 0;\n    font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif;\n  }\n`\n\nconst theme = {\n  colors: {\n    primary: \"#007acc\",\n  },\n}\n\nconst Layout = ({ children }) => (\n  <ThemeProvider theme={theme}>\n    <GlobalStyle />\n    <Helmet>\n      <title>My Portfolio</title>\n    </Helmet>\n    <header>\n      <h1>My Portfolio</h1>\n    </header>\n    <main>{children}</main>\n  </ThemeProvider>\n)\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction Seo({ description, title, children }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta name=\"twitter:creator\" content={site.siteMetadata?.author || ``} />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n"],"names":["React","Link","Layout","Seo","UsingTypescript","data","location","pathname","site","buildTime","href","to","Head","title","query","createGlobalStyle","ThemeProvider","Helmet","GlobalStyle","theme","colors","primary","children","createElement","useStaticQuery","description","_site$siteMetadata","_site$siteMetadata2","metaDescription","siteMetadata","defaultTitle","Fragment","name","content","property","author"],"sourceRoot":""}